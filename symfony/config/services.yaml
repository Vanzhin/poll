# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    cache_adapter: cache.adapter.filesystem
    router.request_context.host: '%env(SITE_BASE_HOST)%'
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    #  asset.request_context.secure: true
    app.name: '%env(APP_NAME)%'
    app.default_from_email: '%env(DEFAULT_FROM_ADDR)%'
    app.default_from_name: '%env(DEFAULT_FROM_NAME)%'
    app.admin_user: '%env(ADMIN_USER)%'
    app.admin_email: '%env(ADMIN_EMAIL)%'
    app.admin_pass: '%env(ADMIN_PASS)%'
    app.user_pass: '%env(USER_PASS)%'

    app.temp_dir: '%kernel.project_dir%/public/temp/'

    question_upload: 'uploads/question'
    question_upload_url: '%env(SITE_URL)%/%question_upload%'
    question_upload_dir: '%kernel.project_dir%/public/%question_upload%'

    variant_upload: 'uploads/variant'
    variant_upload_url: '%env(SITE_URL)%/%variant_upload%'
    variant_upload_dir: '%kernel.project_dir%/public/%variant_upload%'

    category_upload: 'uploads/category'
    category_upload_url: '%env(SITE_URL)%/%category_upload%'
    category_upload_dir: '%kernel.project_dir%/public/%category_upload%'

    protocol_upload: 'protocols'
    protocol_upload_url: '%env(SITE_URL)%/%protocol_upload%'
    protocol_upload_dir: '%kernel.project_dir%/public/%protocol_upload%'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:

            # при создании экземпляра App\Service\FileUploader с именем переменной $questionImageUploader выполняется тот или иной сервис (описан ниже)

            App\Service\FileUploader $questionImageUploader: '@image_uploader.question'
            App\Service\FileUploader $variantImageUploader: '@image_uploader.variant'
            App\Service\FileUploader $categoryImageUploader: '@image_uploader.category'
            App\Service\FileUploader $protocolFileUploader: '@file_uploader.protocol'

    App\Repository\User\UserRepository: ~
    App\Repository\Interfaces\UserRepositoryInterface: '@App\Repository\User\UserRepository'


    #            League\Flysystem\Filesystem $questionFileSystem: '@oneup_flysystem.upload_question_filesystem'
#            League\Flysystem\Filesystem $variantFileSystem: '@oneup_flysystem.upload_variant_filesystem'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\Response\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\EventListener\CompanyCreatedListener:
        tags:
            - { name: kernel.event_listener, event: company.created }


    Gedmo\Tree\TreeListener:
        tags:
            - name: doctrine.event_subscriber
              connection: default
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    image_uploader.question:
        class: App\Service\FileUploader
        arguments:
            $fileSystem: '@oneup_flysystem.upload_question_filesystem'

    image_uploader.variant:
        class: App\Service\FileUploader
        arguments:
            $fileSystem: '@oneup_flysystem.upload_variant_filesystem'

    image_uploader.category:
        class: App\Service\FileUploader
        arguments:
            $fileSystem: '@oneup_flysystem.upload_category_filesystem'
    file_uploader.protocol:
        class: App\Service\FileUploader
        arguments:
            $fileSystem: '@oneup_flysystem.upload_protocol_filesystem'


    App\Service\Mailer:
        arguments:
            $appName: '%app.name%'
            $defaultFromEmail: '%app.default_from_email%'
            $defaultFromName: '%app.default_from_name%'
#            $loginLinkHandler: 'security.authenticator.login_link_handler.login'

    App\Service\SecurityService:
        arguments:
            $host: '%env(CORS_ALLOW_ORIGIN)%'


    App\Service\FileHandler:
        arguments:
            $tempDir: '%app.temp_dir%'


#    App\Entity\Variant:
#        arguments:
#            $uploader:  '@image_uploader.variant'