<?php

namespace App\DataFixtures;

use App\Entity\MinTrudTest;
use App\Entity\Type;
use Doctrine\Bundle\FixturesBundle\FixtureGroupInterface;
use Doctrine\Persistence\ObjectManager;

class MinTrudTestFixtures extends BaseFixtures implements FixtureGroupInterface
{

    private static array $test = [
        1 => ['Оказание первой помощи пострадавшим', 'ИД34'],
        2 => ['Использование (применение) средств индивидуальной защиты', 'ИД39'],
        3 => ['Общие вопросы охраны труда и функционирования системы управления охраной труда','ИД46А'],
        4 => ['Безопасные методы и приемы выполнения работ при воздействии вредных и (или) опасных производственных факторов, источников опасности, идентифицированных в рамках специальной оценки условий труда и оценки профессиональных рисков', 'ИД46Б'],
        5 => ['Безопасные методы и приемы выполнения работ повышенной опасности, к которым предъявляются дополнительные требования в соответствии с нормативными правовыми актами, содержащими государственные нормативные требования охраны труда','ИД46Б'],
        6 => ['Безопасные методы и приемы выполнения земляных работ','ИД46В_1'],
        7 => ['Безопасные методы и приемы выполнения ремонтных, монтажных и демонтажных работ зданий и сооружений','ИД46В_2'],
        8 => ['Безопасные методы и приемы выполнения работ при размещении, монтаже, техническом обслуживании и ремонте технологического оборудования (включая технологическое оборудование)','ИД46В_3'],
        9 => ['Безопасные методы и приемы выполнения работ на высоте','ИД46В_4'],
        10 => ['Безопасные методы и приемы выполнения пожароопасных работ','ИД46В_5'],
        11 => ['Безопасные методы и приемы выполнения работ в ограниченных и замкнутых пространствах (ОЗП)','ИД46В_6'],
        12 => ['Безопасные методы и приемы выполнения строительных работ, в том числе: - окрасочные работы - электросварочные и газосварочные работы', 'ИД46В_7'],
        13 => ['Безопасные методы и приемы выполнения работ, связанных с опасностью воздействия сильнодействующих и ядовитых веществ','ИД46В_8'],
        14 => ['Безопасные методы и приемы выполнения газоопасных работ', 'ИД46В_9'],
        15 => ['Безопасные методы и приемы выполнения огневых работ', 'ИД46В_10'],
        16 => ['Безопасные методы и приемы выполнения работ, связанные с эксплуатацией подъемных сооружений', 'ИД46В_11'],
        17 => ['Безопасные методы и приемы выполнения работ, связанные с эксплуатацией тепловых энергоустановок','ИД46В_12'],
        18 => ['Безопасные методы и приемы выполнения работ в электроустановках','ИД46В_13'],
        19 => ['Безопасные методы и приемы выполнения работ, связанные с эксплуатацией сосудов, работающих под избыточным давлением','ИД46В_14'],
        20 => ['Безопасные методы и приемы обращения с животными','ИД46В_15'],
        21 => ['Безопасные методы и приемы при выполнении водолазных работ', 'ИД46В_16'],
        22 => ['Безопасные методы и приемы работ по поиску, идентификации, обезвреживанию и уничтожению взрывоопасных предметов','ИД46В_17'],
        23 => ['Безопасные методы и приемы работ в непосредственной близости от полотна или проезжей части эксплуатируемых автомобильных и железных дорог','ИД46В_18'],
        24 => ['Безопасные методы и приемы работ, на участках с патогенным заражением почвы','ИД46В_19'],
        25 => ['Безопасные методы и приемы работ по валке леса в особо опасных условиях', 'ИД46В_20'],
        26 => ['Безопасные методы и приемы работ по перемещению тяжеловесных и крупногабаритных грузов при отсутствии машин соответствующей грузоподъемности и разборке покосившихся и опасных (неправильно уложенных) штабелей круглых лесоматериалов','ИД46В_21'],
        27 => ['Безопасные методы и приемы работ с радиоактивными веществами и источниками ионизирующих излучений','ИД46В_22'],
        28 => ['Безопасные методы и приемы работ с ручным инструментом, в том числе с пиротехническим','ИД46В_23'],
        29 => ['Безопасные методы и приемы работ в театрах','ИД46В_24']
    ];

    function loadData(ObjectManager $manager)
    {
        foreach (static::$test as $key => $title) {
            $entity = $this->create(MinTrudTest::class, function (MinTrudTest $minTrudTest) use ($manager, $key, $title) {
                $minTrudTest
                    ->setTitle($title[0])
                    ->setOriginalId($key)
                    ->setType($title[1])
                ;
            });
            $this->addReference(MinTrudTest::class . "|$key", $entity);
        }

        $this->manager->flush();
    }

    public static function getGroups(): array
    {
        return ['trud'];
    }
}
