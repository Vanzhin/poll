<?php

namespace App\DataFixtures;

use App\Entity\MinTrudTest;
use App\Entity\Type;
use Doctrine\Bundle\FixturesBundle\FixtureGroupInterface;
use Doctrine\Persistence\ObjectManager;

class MinTrudTestFixtures extends BaseFixtures implements FixtureGroupInterface
{

    private static array $test = [
        1 => 'Оказание первой помощи пострадавшим',
        2 => 'Использование (применение) средств индивидуальной защиты',
        3 => 'Общие вопросы охраны труда и функционирования системы управления охраной труда',
        4 => 'Безопасные методы и приемы выполнения работ при воздействии вредных и (или) опасных производственных факторов, источников опасности, идентифицированных в рамках специальной оценки условий труда и оценки профессиональных рисков',
        5 => 'Безопасные методы и приемы выполнения работ повышенной опасности, к которым предъявляются дополнительные требования в соответствии с нормативными правовыми актами, содержащими государственные нормативные требования охраны труда',
        6 => 'Безопасные методы и приемы выполнения земляных работ',
        7 => 'Безопасные методы и приемы выполнения ремонтных, монтажных и демонтажных работ зданий и сооружений',
        8 => 'Безопасные методы и приемы выполнения работ при размещении, монтаже, техническом обслуживании и ремонте технологического оборудования (включая технологическое оборудование)',
        9 => 'Безопасные методы и приемы выполнения работ на высоте',
        10 => 'Безопасные методы и приемы выполнения пожароопасных работ',
        11 => 'Безопасные методы и приемы выполнения работ в ограниченных и замкнутых пространствах (ОЗП)',
        12 => 'Безопасные методы и приемы выполнения строительных работ, в том числе: - окрасочные работы - электросварочные и газосварочные работы',
        13 => 'Безопасные методы и приемы выполнения работ, связанных с опасностью воздействия сильнодействующих и ядовитых веществ',
        14 => 'Безопасные методы и приемы выполнения газоопасных работ',
        15 => 'Безопасные методы и приемы выполнения огневых работ',
        16 => 'Безопасные методы и приемы выполнения работ, связанные с эксплуатацией подъемных сооружений',
        17 => 'Безопасные методы и приемы выполнения работ, связанные с эксплуатацией тепловых энергоустановок',
        18 => 'Безопасные методы и приемы выполнения работ в электроустановках',
        19 => 'Безопасные методы и приемы выполнения работ, связанные с эксплуатацией сосудов, работающих под избыточным давлением',
        20 => 'Безопасные методы и приемы обращения с животными',
        21 => 'Безопасные методы и приемы при выполнении водолазных работ',
        22 => 'Безопасные методы и приемы работ по поиску, идентификации, обезвреживанию и уничтожению взрывоопасных предметов',
        23 => 'Безопасные методы и приемы работ в непосредственной близости от полотна или проезжей части эксплуатируемых автомобильных и железных дорог',
        24 => 'Безопасные методы и приемы работ, на участках с патогенным заражением почвы',
        25 => 'Безопасные методы и приемы работ по валке леса в особо опасных условиях',
        26 => 'Безопасные методы и приемы работ по перемещению тяжеловесных и крупногабаритных грузов при отсутствии машин соответствующей грузоподъемности и разборке покосившихся и опасных (неправильно уложенных) штабелей круглых лесоматериалов',
        27 => 'Безопасные методы и приемы работ с радиоактивными веществами и источниками ионизирующих излучений',
        28 => 'Безопасные методы и приемы работ с ручным инструментом, в том числе с пиротехническим',
        29 => 'Безопасные методы и приемы работ в театрах'
    ];

    function loadData(ObjectManager $manager)
    {
        foreach (static::$test as $key => $title) {
            $entity = $this->create(MinTrudTest::class, function (MinTrudTest $minTrudTest) use ($manager, $key, $title) {
                $minTrudTest
                    ->setTitle($title)
                    ->setOriginalId($key);
            });
            $this->addReference(Type::class . "|$key", $entity);
        }

        $this->manager->flush();
    }

    public static function getGroups(): array
    {
        return ['trud'];
    }
}
